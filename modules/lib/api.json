{
    "openapi": "3.0.0",
    "info": {
        "version": "7.0.0",
        "title": "TEI Publisher API",
        "description": ""
    },
    "servers": [
        {
            "description": "Endpoint for testing on localhost",
            "url": "http://localhost:8080/exist/apps/tei-publisher"
        }
    ],
    "tags": [
        {
            "name": "documents",
            "description": "Retrieve document content transformed to target format"
        },
        {
            "name": "collection",
            "description": "Browse the collection hierarchy and upload new files"
        },
        {
            "name": "odd",
            "description": "Manage the ODD files stored in TEI Publisher"
        },
        {
            "name": "search",
            "description": "Searching the collection"
        },
        {
            "name": "convert",
            "description": "Convert content to TEI"
        },
        {
            "name": "preview",
            "description": "Preview how a document renders"
        }
    ],
    "components": {
        "securitySchemes": {
            "basicAuth": {
                "type": "http",
                "scheme": "basic"
            },
            "cookieAuth": {
                "type": "apiKey",
                "name": "org.exist.login",
                "in": "cookie"
            }
        }
    },
    "paths": {
        "/api/collection/{path}": {
            "get": {
                "summary": "Get formatted overview of documents in the collection",
                "tags": [ "collection" ],
                "operationId": "capi:list",
                "parameters": [
                    {
                        "name": "path",
                        "in": "path",
                        "required": true,
                        "schema":{
                            "type": "string",
                            "example": "test"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns HTML describing the collection",
                        "content":{
                            "text/html": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/collection": {
            "get": {
                "summary": "Get formatted overview of documents in the collection",
                "tags": [
                    "collection"
                ],
                "operationId": "capi:list",
                "responses": {
                    "200": {
                        "description": "Returns HTML describing the collection",
                        "content": {
                            "text/html": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/upload/{collection}": {
            "post": {
                "summary": "Upload a number of files",
                "tags": [
                    "collection"
                ],
                "operationId": "capi:upload",
                "x-constraints": {
                    "group": "tei"
                },
                "parameters": [
                    {
                        "name": "collection",
                        "in": "path",
                        "schema":{
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "requestBody":{
                    "content": {
                        "multipart/form-data": {
                            "schema":{
                                "type": "object",
                                "properties": {
                                    "files[]": {
                                        "type": "array",
                                        "items":{
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Upload response",
                        "content": {
                            "application/json": {
                                "schema":{
                                    "properties": {
                                        "name": {
                                            "type": "string"
                                        },
                                        "path": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string"
                                        },
                                        "size": {
                                            "type": "number"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "description": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "object",
                                            "nullable": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Upload collection not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Upload collection not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/document/{id}": {
            "delete": {
                "summary": "Delete a document",
                "tags": ["documents"],
                "operationId": "dapi:delete",
                "x-constraints": {
                    "group": "tei"
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema":{
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "410": {
                        "description": "Document deleted"
                    }
                }
            }
        },
        "/api/document/{id}/html": {
            "get": {
                "summary": "Retrieve document content as HTML",
                "description": "Retrieve whole document transformed to HTML via ODD",
                "tags": [
                    "documents"
                ],
                "operationId": "dapi:html",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "test/F-rom.xml"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the entire document as HTML",
                        "content": {
                            "text/html": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Document not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/document/{id}/pdf": {
            "get": {
                "summary": "Retrieve document content as PDF",
                "description": "Retrieve whole document transformed via ODD and FO",
                "tags": [
                    "documents"
                ],
                "operationId": "dapi:pdf",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "test/F-rom.xml"
                        },
                        "description": "Path to the XML document"
                    },
                    {
                        "name": "source",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "Set to true to see generated XML FO source"
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a PDF",
                        "content": {
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Document not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/document/{id}/tex": {
            "get": {
                "summary": "Retrieve document content as PDF",
                "description": "Retrieve whole document transformed via ODD and LaTeX",
                "tags": [ "documents" ],
                "operationId": "dapi:latex",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "test/F-rom.xml"
                        }
                    },
                    {
                        "name": "source",
                        "in": "query",
                        "schema":{
                            "type": "boolean",
                            "default": false
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a PDF",
                        "content": {
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "application/x-latex": {
                                "schema":{
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Document not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/document/{id}/epub": {
            "get": {
                "summary": "Retrieve document content as EPub",
                "description": "Retrieve whole document as EPub transformed via ODD",
                "tags": [
                    "documents"
                ],
                "operationId": "dapi:epub",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "doc/documentation.xml"
                        }
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "lang",
                        "in": "query",
                        "schema":{
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a PDF",
                        "content": {
                            "application/epub+zip": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Document not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/document/{id}/contents": {
            "get": {
                "summary": "Retrieve a formatted table of contents for the document",
                "tags": [
                    "documents"
                ],
                "operationId": "dapi:table-of-contents",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "test/kant_rvernunft_1781.TEI-P5.xml"
                        }
                    },
                    {
                        "name": "view",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "page",
                                "div",
                                "single"
                            ]
                        },
                        "example": "div",
                        "description": "The view type used by the main view which displays the document, e.g. 'page' or 'div'. This has an influence on the generated links, which need to differ when linking to a page rather than a section."
                    },
                    {
                        "name": "target",
                        "in": "query",
                        "schema":{
                            "type": "string"
                        },
                        "description": "The target channel into which link selection events should be send (if the user clicks on a link)"
                    },
                    {
                        "name": "icons",
                        "in": "query",
                        "schema":{
                            "type": "boolean",
                            "default": true
                        },
                        "description": "Should an expand/collapse icon be displayed next to headings having nested child sections?"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the formatted table of contents as HTML",
                        "content": {
                            "text/html": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Document not found",
                        "content": {
                            "application/json": {
                                "schema":{
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/parts/{doc}/{format}": {
            "get": {
                "summary": "Retrieve parts of a document transformed via ODD",
                "description": "Retrieve a document fragment, usually a division or page, transformed to HTML via the ODD. This operation is internally used by pb-view, but can also be helpful with pb-load or in other contexts.",
                "operationId": "dapi:get-fragment",
                "tags": [ "documents" ],
                "parameters": [
                    {
                        "name": "doc",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "doc/documentation.xml",
                        "description": "path to the document, relative to TEI Publisher's data root colletion"
                    },
                    {
                        "name": "format",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "json",
                                "html"
                            ]
                        },
                        "description": "the format to return: either `json` or `html`. The first returns the HTML inside a JSON record with additional information about the next/previous page and so on. The latter is mainly for debugging purposes."
                    },
                    {
                        "name": "view",
                        "in": "query",
                        "schema":{
                            "type": "string",
                            "enum": [
                                "page",
                                "div",
                                "single"
                            ]
                        },
                        "example": "div",
                        "description": "the view to use: this determines the size of the fragment returned, i.e. just a page, a whole division or the entire document"
                    },
                    {
                        "name": "root",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "an eXist node id used to identify the root of the fragment to return. mainly used to navigate to the next/previous fragment based on the properties received in the JSON record during a preceding request."
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "an xml:id to load: can be used instead of `root` to determine the fragment root to be loaded. Should be an xml:id existing in the document."
                    },
                    {
                        "name": "xpath",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "an XPath expression to directly select a sub-part of the document, e.g. the TEI body, front or back matter, or teiHeader. Usually only makes sense in combination with `view=single`."
                    },
                    {
                        "name": "map",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "defines an optional mapping function (written in XQuery), which can be used to replace the document content to be processed with something else. Used to e.g. look up the translation for a given transcription and process it instead."
                    },
                    {
                        "name": "highlight",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "view": {
                                            "type": "string",
                                            "description": "the view type used"
                                        },
                                        "doc": {
                                            "type": "string",
                                            "description": "path to the document from which the fragment was retrieved"
                                        },
                                        "root": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "odd": {
                                            "type": "string",
                                            "description": "the ODD used for the transformation"
                                        },
                                        "next": {
                                            "type": "string",
                                            "nullable": true,
                                            "description": "points to the next fragment in the document. Pass this value as `root` in a follow up request."
                                        },
                                        "previous": {
                                            "type": "string",
                                            "nullable": true,
                                            "description": "points to the previous fragment in the document. Pass this value as `root` in a follow up request."
                                        },
                                        "switchView": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "content": {
                                            "type": "string",
                                            "description": "the content of the fragment as HTML string"
                                        },
                                        "footnotes": {
                                            "type": "string",
                                            "nullable": true
                                        }
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Document not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/odd/{odd}": {
            "get": {
                "summary": "Retrieve an ODD",
                "description": "Retrieve an ODD as TEI/XML",
                "tags": [ "odd" ],
                "operationId": "oapi:get-odd",
                "parameters": [
                    {
                        "name": "odd",
                        "in": "path",
                        "description": "Filename of the ODD including suffix (.odd)",
                        "schema": {
                            "type": "string",
                            "example": "docbook.odd"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the TEI/XML source of the ODD",
                        "content": {
                            "application/xml": {
                                "schema":{
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "ODD not found"
                    }
                }
            },
            "delete": {
                "summary": "Delete an ODD from the database",
                "description": "Delete the ODD given in the path parameter from the database. The ODD should be located in the collection referenced by `config:odd-root` in `modules/config.xqm`.",
                "tags": [
                    "odd"
                ],
                "operationId": "oapi:delete-odd",
                "x-constraints": {
                    "group": "tei"
                },
                "parameters": [
                    {
                        "name": "odd",
                        "in": "path",
                        "schema": {
                            "type": "string",
                            "example": "testodd.odd"
                        },
                        "description": "Filename of the ODD including suffix (.odd)",
                        "required": true
                    }
                ],
                "responses": {
                    "410": {
                        "description": "ODD was deleted"
                    },
                    "404": {
                        "description": "ODD not found"
                    }
                }
            },
            "post": {
                "summary": "Create an ODD",
                "description": "Create a new ODD using the file name given in the path",
                "tags": [ "odd" ],
                "operationId": "oapi:create-odd",
                "x-constraints": {
                    "group": "tei"
                },
                "parameters": [
                    {
                        "name": "odd",
                        "in": "path",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filename of the ODD without suffix (.odd)",
                        "required": true
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "schema":{
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "ODD was created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "path": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "content": {
                            "application/json": {
                                "schema":{
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/odd": {
            "get": {
                "summary": "Get a list of ODDs available",
                "operationId": "oapi:list-odds",
                "tags": [ "odd" ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items":{
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string"
                                            },
                                            "label": {
                                                "type": "string"
                                            },
                                            "description": {
                                                "type": "string",
                                                "nullable": true
                                            },
                                            "path": {
                                                "type": "string"
                                            },
                                            "canWrite": {
                                                "type": "boolean"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Recompile ODDs",
                "description": "Recompile one or more ODDs after they were changed",
                "operationId": "oapi:recompile",
                "tags": [ "odd" ],
                "x-constraints": {
                    "group": "tei"
                },
                "parameters": [
                    {
                        "name": "odd",
                        "in": "query",
                        "schema":{
                            "type": "array",
                            "items":{
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "check",
                        "in": "query",
                        "schema":{
                            "type": "boolean",
                            "default": false
                        },
                        "description": "Run additional check to ensure the generated code is valid and compiles"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ODDs were recompiled. The result of the compilation is returned as HTML.",
                        "content": {
                            "text/html": {
                                "schema":{
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/templates": {
            "get": {
                "summary": "List available HTML templates",
                "description": "Lists all page layout templates available for the document view. Used by `pb-select-templates`.",
                "tags":[ "templates" ],
                "operationId": "api:list-templates",
                "responses": {
                    "200": {
                        "description": "Array of templates",
                        "content": {
                            "application/json": {
                                "schema":{
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string"
                                            },
                                            "title": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/search": {
            "get": {
                "summary": "Run a search on all TEI Publisher collections",
                "operationId": "sapi:search",
                "tags": [
                    "search"
                ],
                "parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "description": "Query string",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "field",
                        "in": "query",
                        "description": "The field to query",
                        "schema": {
                            "type": "string",
                            "default": "text"
                        }
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "Start offset of the first item to show from the result set",
                        "schema":{
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "per-page",
                        "in": "query",
                        "description": "Number of items to show on one page",
                        "schema":{
                            "type": "integer",
                            "default": 10
                        }
                    },
                    {
                        "name": "doc",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search results returned",
                        "content": {
                            "text/html": {
                                "schema":{
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/search/facets": {
            "get": {
                "summary": "List facets",
                "description": "Return a list of facet counts for current search results",
                "operationId": "sapi:facets",
                "tags": [
                    "search"
                ],
                "parameters": [
                    {

                    }
                ],
                "responses": {
                    "200": {
                        "description": "Facets returned",
                        "content": {
                            "text/html": {
                                "schema":{
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/search/autocomplete": {
            "get": {
                "summary": "List possible completions",
                "description": "Return a list of possible completions for the given search term",
                "operationId": "sapi:autocomplete",
                "tags": [
                    "search"
                ],
                "parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "description": "The prefix to expand",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "field",
                        "in": "query",
                        "description": "The field to query",
                        "schema":{
                            "title": "string",
                            "default": "text"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of possible completions",
                        "content": {
                            "application/json": {
                                "schema":{
                                    "type": "array",
                                    "items":{
                                        "type": "object",
                                        "properties": {
                                            "text": {
                                                "type": "string"
                                            },
                                            "value": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/convert": {
            "post": {
                "summary": "Convert a Word document to TEI/XML",
                "tags": [
                    "convert"
                ],
                "operationId": "dapi:convert-docx",
                "parameters": [
                    {
                        "name": "odd",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": "docx.odd"
                        }
                    }
                ],
                "requestBody":{
                    "required": true,
                    "content": {
                        "application/xml": {
                            "schema":{
                                "type": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Resulting TEI/XML output",
                        "content": {
                            "application/xml": {
                                "schema":{
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/preview": {
            "post": {
                "summary": "Post an XML document and get a preview rendered via ODD",
                "tags": [
                    "preview"
                ],
                "operationId": "dapi:preview",
                "parameters": [
                    {
                        "name": "odd",
                        "in": "query",
                        "schema":{
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/xml": {
                            "schema": {
                                "type": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Resulting HTML output",
                        "content": {
                            "text/html": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/login": {
            "get": {
                "description": "Check if user is logged in",
                "operationId": "router:login",
                "tags": [
                    "user"
                ],
                "parameters": [
                    {
                        "name": "logout",
                        "in": "query",
                        "description": "Set to log out the current user",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "user": {
                                            "type": "string"
                                        },
                                        "groups": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "dba": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Not logged in"
                    }
                }
            },
            "post": {
                "description": "Login the user",
                "tags": [ "user" ],
                "operationId": "router:login",
                "parameters": [
                    {
                        "name": "user",
                        "in": "query",
                        "description": "Name of the user",
                        "schema": {
                            "type": "string",
                            "default": "tei"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "password",
                            "default": "simple"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "user": {
                                            "type": "string"
                                        },
                                        "groups": {
                                            "type": "array",
                                            "items":{
                                                "type": "string"
                                            }
                                        },
                                        "dba": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Wrong user or password"
                    }
                }
            }
        }
    },
    "security": [
        {
            "cookieAuth": []
        },
        {
            "basicAuth": []
        }
    ]
}